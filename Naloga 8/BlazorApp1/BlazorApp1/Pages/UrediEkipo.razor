@page "/uredi-ekipo/{id:int}"
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Uredi ekipo</h3>

@if (ekipa == null)
{
    <p><em>Nalaganje...</em></p>
}
else
{
    <EditForm Model="ekipa" OnValidSubmit="ShraniSpremembe">
        <DataAnnotationsValidator />
        <Microsoft.AspNetCore.Components.Forms.ValidationSummary />

        <div class="mb-3">
            <label for="naziv" class="form-label">Naziv</label>
            <InputText id="naziv" class="form-control" @bind="ekipa.Naziv" />
        </div>
        <div class="mb-3">
            <label for="drzava" class="form-label">Država</label>
            <InputText id="drzava" class="form-control" @bind="ekipa.Drzava" />
        </div>
        <div class="mb-3">
            <label for="letoUstanovitve" class="form-label">Leto Ustanovitve</label>
            <InputNumber TValue="int" id="letoUstanovitve" class="form-control" @bind="ekipa.LetoUstanovitve" />
        </div>
        <button type="submit" class="btn btn-primary">Shrani</button>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Ekipa? ekipa = null;

    protected override async Task OnInitializedAsync()
    {
        ekipa = await Http.GetFromJsonAsync<Ekipa>($"api/ekipa/{Id}");
        if (ekipa == null)
        {
            Console.WriteLine("Ekipa ni bila najdena.");
        }
    }

    private async Task ShraniSpremembe()
    {
        var response = await Http.PutAsJsonAsync($"api/ekipa/{Id}", ekipa);
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/ekipe");
        }
        else
        {
            Console.WriteLine("Napaka pri shranjevanju sprememb.");
        }
    }

    public class Ekipa
    {
        public int Id { get; set; }
        public string Naziv { get; set; }
        public string Drzava { get; set; }
        public int LetoUstanovitve { get; set; }
    }
}
